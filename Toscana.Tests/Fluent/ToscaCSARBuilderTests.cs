

using System;
using System.IO;
using NUnit.Framework;
using Toscana.Fluent;
using Toscana.Fluent.Models;

namespace Toscana.Tests.Fluent
{
    [TestFixture]
    public class ToscaCSARBuilderTests
    {
        [Test]
        public void Test()
        {
            var dto = new SlimMetadata
            {
                ToscaMetaFileVersion = new Version(1, 0),
                CSARVersion = new Version(0, 1),
                CreatedBy = "AutoGenerated"
            };
            var constructor = FluentCSAR.Config(
                builder =>
                    builder
                        .AddMetadata(dto)
                        .EntryDefinitions("viduchinsky.yml", new ToscaServiceTemplate())
                        .AddArtifact("vido.txt", new byte[0])
                        .AddArtifact("vidoDriver.zip", new byte[0])
                        .AddServiceTemplate("vidoYaml.yml", new ToscaServiceTemplate())
                        .AddServiceTemplate("vidoYaml2.yml", new ToscaServiceTemplate()));
            var zipData = constructor.BuildZip();
            var toscaCloudServiceArchive = constructor.BuildCSAR();
            using (var fileStream = File.Create(@"c:\Temp\vido.zip"))
                fileStream.Write(zipData, 0, zipData.Length);
        }
    }
}

